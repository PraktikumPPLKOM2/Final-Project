#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Dec 03, 2020 09:42:54 AM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Teacher - Add Assignment_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Teacher - Add Assignment_support.set_Tk_var()
    top = teacher_add_assignment (root)
    Teacher - Add Assignment_support.init(root, top)
    root.mainloop()

w = None
def create_teacher_add_assignment(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_teacher_add_assignment(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    Teacher - Add Assignment_support.set_Tk_var()
    top = teacher_add_assignment (w)
    Teacher - Add Assignment_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_teacher_add_assignment():
    global w
    w.destroy()
    w = None

class teacher_add_assignment:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#ffffff'  # X11 color: 'white'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("480x420+654+111")
        top.minsize(120, 1)
        top.maxsize(1370, 729)
        top.resizable(0,  0)
        top.title("Teacher - Add Assignment")
        top.configure(background="#ffffff")
        top.configure(highlightbackground="#ffffff")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg='#05bff5')
        top.configure(menu = self.menubar)

        self.navbar = tk.Frame(top)
        self.navbar.place(x=0, y=0, height=30, width=480)
        self.navbar.configure(relief='flat')
        self.navbar.configure(borderwidth="2")
        self.navbar.configure(background="#05bff5")
        self.navbar.configure(highlightbackground="#ffffff")
        self.navbar.configure(highlightcolor="black")

        self.app_name = tk.Label(self.navbar)
        self.app_name.place(x=0, y=0, height=30, width=119)
        self.app_name.configure(activebackground="#05bff5")
        self.app_name.configure(activeforeground="white")
        self.app_name.configure(background="#05bff5")
        self.app_name.configure(disabledforeground="black")
        self.app_name.configure(font="-family {Arcon Rounded-} -size 9 -weight bold")
        self.app_name.configure(foreground="white")
        self.app_name.configure(highlightbackground="#ffffff")
        self.app_name.configure(highlightcolor="black")
        self.app_name.configure(text='''Buku Penghubung''')

        self.add_assignment = tk.LabelFrame(top)
        self.add_assignment.place(x=10, y=35, height=380, width=460)
        self.add_assignment.configure(relief='flat')
        self.add_assignment.configure(borderwidth="4")
        self.add_assignment.configure(font="-family {Arcon Rounded-} -size 9 -weight bold")
        self.add_assignment.configure(foreground="black")
        self.add_assignment.configure(relief="flat")
        self.add_assignment.configure(text='''Add Assignment''')
        self.add_assignment.configure(background="white")
        self.add_assignment.configure(highlightbackground="#ffffff")
        self.add_assignment.configure(highlightcolor="black")

        self.assignment_name = tk.LabelFrame(self.add_assignment)
        self.assignment_name.place(x=75, y=40, height=60, width=310
                , bordermode='ignore')
        self.assignment_name.configure(relief='groove')
        self.assignment_name.configure(foreground="black")
        self.assignment_name.configure(text='''Assignment Name''')
        self.assignment_name.configure(background="#ffffff")
        self.assignment_name.configure(highlightbackground="#ffffff")
        self.assignment_name.configure(highlightcolor="black")

        self.entry_class_name = tk.Entry(self.assignment_name)
        self.entry_class_name.place(x=10, y=20, height=30, width=290
                , bordermode='ignore')
        self.entry_class_name.configure(background="white")
        self.entry_class_name.configure(disabledforeground="#bfbfbf")
        self.entry_class_name.configure(font="TkFixedFont")
        self.entry_class_name.configure(foreground="#000000")
        self.entry_class_name.configure(highlightbackground="#ffffff")
        self.entry_class_name.configure(highlightcolor="black")
        self.entry_class_name.configure(insertbackground="black")
        self.entry_class_name.configure(selectbackground="blue")
        self.entry_class_name.configure(selectforeground="white")

        self.deadline = tk.LabelFrame(self.add_assignment)
        self.deadline.place(x=75, y=105, height=60, width=310
                , bordermode='ignore')
        self.deadline.configure(relief='groove')
        self.deadline.configure(foreground="black")
        self.deadline.configure(text='''Deadline''')
        self.deadline.configure(background="#ffffff")
        self.deadline.configure(highlightbackground="#ffffff")
        self.deadline.configure(highlightcolor="black")

        self.entry_key = tk.Entry(self.deadline)
        self.entry_key.place(x=10, y=20, height=30, width=290
                , bordermode='ignore')
        self.entry_key.configure(background="white")
        self.entry_key.configure(disabledforeground="#bfbfbf")
        self.entry_key.configure(font="TkFixedFont")
        self.entry_key.configure(foreground="#000000")
        self.entry_key.configure(highlightbackground="#ffffff")
        self.entry_key.configure(highlightcolor="black")
        self.entry_key.configure(insertbackground="black")
        self.entry_key.configure(selectbackground="blue")
        self.entry_key.configure(selectforeground="white")
        self.entry_key.configure(textvariable=Teacher - Add Assignment_support.enroll_key)

        self.add_butt = tk.Button(self.add_assignment)
        self.add_butt.place(x=200, y=330, height=30, width=60
                , bordermode='ignore')
        self.add_butt.configure(activebackground="#05bff5")
        self.add_butt.configure(activeforeground="white")
        self.add_butt.configure(background="white")
        self.add_butt.configure(disabledforeground="#bfbfbf")
        self.add_butt.configure(font="-family {Arcon Rounded-} -size 9 -weight bold")
        self.add_butt.configure(foreground="#05bff5")
        self.add_butt.configure(highlightbackground="#ffffff")
        self.add_butt.configure(highlightcolor="black")
        self.add_butt.configure(pady="0")
        self.add_butt.configure(text='''add''')

        self.description = tk.LabelFrame(self.add_assignment)
        self.description.place(x=75, y=170, height=135, width=310
                , bordermode='ignore')
        self.description.configure(relief='groove')
        self.description.configure(foreground="black")
        self.description.configure(text='''Description''')
        self.description.configure(background="#ffffff")
        self.description.configure(highlightbackground="#ffffff")
        self.description.configure(highlightcolor="black")

        self.entry_key = tk.Entry(self.description)
        self.entry_key.place(x=10, y=23, height=100, width=290
                , bordermode='ignore')
        self.entry_key.configure(background="white")
        self.entry_key.configure(disabledforeground="#bfbfbf")
        self.entry_key.configure(font="TkFixedFont")
        self.entry_key.configure(foreground="#000000")
        self.entry_key.configure(highlightbackground="#ffffff")
        self.entry_key.configure(highlightcolor="black")
        self.entry_key.configure(insertbackground="black")
        self.entry_key.configure(selectbackground="blue")
        self.entry_key.configure(selectforeground="white")
        self.entry_key.configure(textvariable=Teacher - Add Assignment_support.enroll_key)

if __name__ == '__main__':
    vp_start_gui()





